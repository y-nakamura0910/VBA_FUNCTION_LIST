Option Explicit

Public Sub function_exe()

    ' パスワードの指定
    Dim password As String
    password = 1234
    
    ' 2. ブックの保護解除
    Call Module1.workbook_unprotect(password)
    
    ' 4. シートの保護解除
    Call Module1.worksheet_unprotect(password)
    
    ' 5. ファイルを開いて、ファイル名を取得
    Dim source_file_name As String
    source_file_name = Module1.file_open(password)
    
    ' 6. シート名を指定
    Dim source_sheet_name As String
    source_sheet_name = Module1.get_sheet_name(source_file_name, password)
    
    ' 8. データソースシート
    Dim data_source_sheet As Worksheet
    Set data_source_sheet = Workbooks(source_file_name).Worksheets(source_sheet_name)
    
    ' 9. データソース開始行の指定
    Dim data_source_start_row As Long
    data_source_start_row = 9
    
    ' 10. データソース終了行の指定
    Dim data_source_column As String
    Dim data_source_end_row As Long
    data_source_column = "B"
    data_source_end_row = get_end_row(data_source_column, data_source_sheet)
    
    ' 3. シートの保護
    Call Module1.worksheet_protect(password)
    
    ' 1. ブックの保護
    Call Module1.workbook_protect(password)
    
End Sub

' 1. ブックの保護
Private Sub workbook_protect(password As String)
    ThisWorkbook.Protect (password)
End Sub

' 2. ブックの保護解除
Private Sub workbook_unprotect(password As String)
    ThisWorkbook.Unprotect (password)
End Sub

' 3. シートの保護
Private Sub worksheet_protect(password As String)
    ThisWorkbook.Worksheets(1).Protect (password)
End Sub

' 4. シートの解除
Private Sub worksheet_unprotect(password As String)
    ThisWorkbook.Worksheets(1).Unprotect (password)
End Sub

' 5. ファイルを開いて、ファイル名を取得
Private Function file_open(password As String) As String
    
    ' カレントディレクトリの設定
    CreateObject("WScript.Shell").currentdirectory = ThisWorkbook.Path
    
    ' ファイル名を取得
    Dim file_path As Variant
    file_path = Application.GetOpenFilename()
    
    If file_path = False Then
        Call Module1.worksheet_protect(password)
        Call Module1.workbook_protect(password)
        End
    Else
        Workbooks.Open Filename:=file_path
        file_open = Application.ActiveWorkbook.Name
    End If
    
End Function

' 6. シート名を指定
Private Function get_sheet_name(source_file_name As String, password As String) As String
    
    ' シート名を入力
    Dim sheet_name As Variant
    sheet_name = Application.InputBox(Prompt:="シート名", Type:=2)
    
    ' 7. 入力したシート名が存在するか判定
    Dim exist_worksheet As Boolean
    exist_worksheet = judge_exist_worksheet(sheet_name)
    
    If sheet_name = False Then
        Workbooks(source_file_name).Close
        Call Module1.worksheet_protect(password)
        Call Module1.workbook_protect(password)
        End
    ElseIf exist_worksheet = False Then
        MsgBox "入力された名前のシート名が存在しません"
        Workbooks(source_file_name).Close
        Call Module1.worksheet_protect(password)
        Call Module1.workbook_protect(password)
        End
    Else
        get_sheet_name = sheet_name
        Exit Function
    End If
    
End Function

Private Function judge_exist_worksheet(sheet_name As Variant)
    Dim ws As Worksheet
    
    For Each ws In ActiveWorkbook.Sheets
        If ws.Name = sheet_name Then
            judge_exist_worksheet = True
            Exit Function
        End If
    Next
    
    judge_exist_worksheet = False

End Function

' 10. データソース終了行の指定
Private Function get_end_row(data_source_column As String, data_source_sheet As Worksheet) As Long
    data_source_sheet.Activate
    get_end_row = Cells(Rows.Count, data_source_column).End(xlUp).Row
End Function

