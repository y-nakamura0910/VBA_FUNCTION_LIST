Option Explicit

Public Sub function_exe()

    ' パスワードの指定
    Dim password As String
    password = 1234
    
    ' ブックの保護解除
    ThisWorkbook.Unprotect (password)
    
    ' シートの保護解除
    ThisWorkbook.Worksheets(1).Unprotect (password)
    
    MsgBox "使用するデータファイルを選択してください"
    
    ' 1. ファイルを開いて、ファイル名を取得
    Dim source_file_name As String
    source_file_name = Module1.file_open(password)
    
    ' 2. シート名を指定
    ' Dim source_sheet_name As String
    ' source_sheet_name = Module1.get_sheet_name(source_file_name, password)
    
    ' データソースシート
    Dim source_sheet As Worksheet
    Set source_sheet = Workbooks(source_file_name).Worksheets(1)
    
    ' データソース開始行の指定
    Dim source_start_row As Long
    source_start_row = 9
    
    ' データソース列見出しの指定
    Dim source_column_heading As Long
    source_column_heading = 2
    
    ' 4. データソース終了行の指定
    Dim source_column As String
    Dim source_end_row As Long
    source_column = "B"
    source_end_row = get_end_row(source_column, source_sheet)
    
    ' 5. 出力先のファイル作成　⇒　データの転記
    
    ' Call Module1.create_dest_file_and_transcribe_data(source_file_name, source_sheet, source_start_row, source_end_row, password)

    
    ' 9. 出力先のフォルダ指定　⇒　データの転記
    
    Call Module1.get_folder_name_and_transcribe_data(source_file_name, source_sheet, source_start_row, source_end_row, source_column_heading, password)
    
    ' ソースファイルを閉じる
    Workbooks(source_file_name).Close SaveChanges:=False
    
    ' シートの保護
    ThisWorkbook.Worksheets(1).Protect (password)
    
    ' ブックの保護
    ThisWorkbook.Protect (password)
    
End Sub


' 1. ファイルを開いて、ファイル名を取得
Private Function file_open(password As String) As String
    
    ' カレントディレクトリの設定
    CreateObject("WScript.Shell").currentdirectory = ThisWorkbook.Path
    
    ' ファイル名を取得
    Dim file_path As Variant
    file_path = Application.GetOpenFilename()
    
    If file_path = False Then
        ThisWorkbook.Worksheets(1).Protect (password)
        ThisWorkbook.Protect (password)
        End
    Else
        Workbooks.Open Filename:=file_path
        file_open = Application.ActiveWorkbook.Name
    End If
    
End Function

' 2. シート名を指定
Private Function get_sheet_name(source_file_name As String, password As String) As String
    
    ' シート名を入力
    Dim sheet_name As Variant
    sheet_name = Application.InputBox(prompt:="シート名", Type:=2)
    
    ' 3. 入力したシート名が存在するか判定
    Dim exist_worksheet As Boolean
    exist_worksheet = judge_exist_worksheet(sheet_name)
    
    If sheet_name = False Then
        Workbooks(source_file_name).Close
        ThisWorkbook.Worksheets(1).Protect (password)
        ThisWorkbook.Protect (password)
        End
    ElseIf exist_worksheet = False Then
        MsgBox "入力された名前のシート名が存在しません"
        get_sheet_name = get_sheet_name(source_file_name, password)
    Else
        get_sheet_name = sheet_name
        Exit Function
    End If
    
End Function

' 3. 入力したシート名が存在するか判定
Private Function judge_exist_worksheet(sheet_name As Variant)

    Dim ws As Worksheet
    
    For Each ws In ActiveWorkbook.Sheets
        If ws.Name = sheet_name Then
            judge_exist_worksheet = True
            Exit Function
        End If
    Next
    
    judge_exist_worksheet = False

End Function

' 4. データソース終了行の指定
Private Function get_end_row(source_column As String, source_sheet As Worksheet) As Long
    source_sheet.Activate
    get_end_row = Cells(Rows.Count, source_column).End(xlUp).Row
End Function

' 5. 出力先のファイル作成　⇒　データの転記
Private Sub create_dest_file_and_transcribe_data(source_file_name As String, source_sheet As Worksheet, source_start_row As Long, source_end_row As Long, password As String)

    ' 6. 出力先のファイル作成
    Dim dest_file_name As String
    dest_file_name = create_dest_file(source_file_name, password)

    ' 出力先のシートの指定
    Dim dest_sheet As Worksheet
    Set dest_sheet = Workbooks(dest_file_name).Worksheets("Sheet1")

    ' 7. タイトルの転記
    Call Module1.transcribe_title(source_sheet, dest_sheet, source_start_row)

    ' データ転記開始行
    Dim dest_row_count As Long
    dest_row_count = source_start_row

    ' 8. データ転記
    Call Module1.transcribe_data(source_sheet, dest_sheet, source_start_row, source_end_row, dest_row_count)

End Sub

' 6. 出力先のファイル作成
Private Function create_dest_file(source_file_name As String, password As String) As String
    
    Dim dest_file_name As Variant
    Dim dest_file_path As Variant
    Dim dest_file As Workbook
    dest_file_name = Application.InputBox(prompt:="出力ファイル名", Type:=2)
    
    If dest_file_name = False Then
        Workbooks(source_file_name).Close
        ThisWorkbook.Worksheets(1).Protect (password)
        ThisWorkbook.Protect (password)
        End
    Else
        dest_file_path = ThisWorkbook.Path & "\" & dest_file_name & ".xlsx"
    End If
    
    If Dir(dest_file_path) = "" Then
        Set dest_file = Workbooks.Add
        dest_file.SaveAs dest_file_path
        create_dest_file = Application.ActiveWorkbook.Name
    Else
        MsgBox "既に" & dest_file_name & "というファイルは存在します"
        create_dest_file = create_dest_file(source_file_name, password)
    End If
        
End Function

' 7. タイトルの転記
Private Sub transcribe_title(source_sheet As Worksheet, dest_sheet As Worksheet, source_start_row As Long)

    Dim i As Long
    
    For i = 1 To source_start_row - 1
        dest_sheet.Range(dest_sheet.Cells(i, 1), dest_sheet.Cells(i, source_sheet.Cells(i, source_sheet.Columns.Count).End(xlToLeft).Column)) = _
        source_sheet.Range(source_sheet.Cells(i, 1), source_sheet.Cells(i, source_sheet.Cells(i, source_sheet.Columns.Count).End(xlToLeft).Column)).Value
    Next i
    
End Sub

' 8. データ転記
Private Sub transcribe_data(source_sheet As Worksheet, dest_sheet As Worksheet, source_start_row As Long, source_end_row As Long, dest_row_count As Long)
    
    Dim ary_data As Variant
    Dim ary_title As Variant
    Dim i As Long
    Dim j As Long
    
    For j = 3 To source_sheet.Cells(source_start_row - 1, source_sheet.Columns.Count).End(xlToLeft).Column
        ary_data = Array()
        ary_title = Array()
        
        For i = 0 To source_end_row - source_start_row
            ReDim Preserve ary_data(UBound(ary_data) + 1)
            ary_data(i) = source_sheet.Cells(i + source_start_row, j)
            ReDim Preserve ary_title(UBound(ary_title) + 1)
            ary_title(i) = source_sheet.Cells(i + source_start_row, j - 1)
            If IsNumeric(ary_data(i)) = True And ary_data(i) <> 0 Then
                dest_sheet.Cells(dest_row_count, j) = ary_data(i)
                dest_sheet.Cells(dest_row_count, j - 1) = ary_title(i)
                dest_row_count = dest_row_count + 1
            End If
        Next i
    Next j
        
End Sub

' 9. 出力先のフォルダ指定　⇒　データの転記
Private Sub get_folder_name_and_transcribe_data(source_file_name As String, source_sheet As Worksheet, source_start_row As Long, source_end_row As Long, source_column_heading As Long, password As String)


    ' 10. 出力先フォルダ名を取得
'    Dim dest_folder_path As String
'    dest_folder_path = get_folder_name(source_file_name, password)

    MsgBox "使用するテンプレートを選択してください。"

    ' 11. 使用するテンプレートを選択
    Dim template_path As String
    template_path = get_template_path(source_file_name, password)
    
    ' 12. ファイル名称を設定
    Dim file_name As String
    file_name = get_file_name(source_file_name, password)
    
    ' 13. 出力先フォルダを作成(Excel)
    Dim dest_excel_folder_path As String
    dest_excel_folder_path = create_excel_folder()
    
    ' 14. 出力先フォルダを作成(PDF)
    Dim dest_pdf_folder_path As String
    dest_pdf_folder_path = create_pdf_folder()

    ' 15. データ転記処理
    Call Module1.transcribe_data_process(template_path, file_name, dest_excel_folder_path, dest_pdf_folder_path, source_sheet, source_start_row, source_end_row, source_column_heading)
    
End Sub

' 11. 出力先フォルダ名を取得
Private Function get_folder_name(source_file_name As String, password As String) As String

    Dim dlg As Object
    Dim blAns As Boolean
    Set dlg = Application.FileDialog(msoFileDialogFolderPicker)
    blAns = dlg.Show
        If blAns Then
            get_folder_name = dlg.SelectedItems(1)
        Else
            Workbooks(source_file_name).Close
        ThisWorkbook.Worksheets(1).Protect (password)
        ThisWorkbook.Protect (password)
            End
        End If
        
End Function

' 12. 使用するテンプレートを選択
Private Function get_template_path(source_file_name As String, password As String) As String
    
    Dim file_path As Variant
    file_path = Application.GetOpenFilename()
    
    If file_path = False Then
        ThisWorkbook.Worksheets(1).Protect (password)
        ThisWorkbook.Protect (password)
        End
    Else
        get_template_path = file_path
    End If
    
End Function

' 13. ファイル名称を設定
Private Function get_file_name(source_file_name As String, password As String)

    Dim file_name As Variant
    file_name = Application.InputBox(prompt:="出力ファイル名　（例. 「2021夏季賞与」）", Type:=2)
    
    If file_name = False Then
        Workbooks(source_file_name).Close
        ThisWorkbook.Worksheets(1).Protect (password)
        ThisWorkbook.Protect (password)
        End
    Else
       get_file_name = file_name
    End If
    
End Function

' 14. 出力先フォルダを作成(Excel)
Private Function create_excel_folder() As String

    MkDir ThisWorkbook.Path & "\" & Format(Now, "yyyymmdd_hhmmss") & "_excel"
    Dim dest_folder_path As String
    dest_folder_path = ThisWorkbook.Path & "\" & Format(Now, "yyyymmdd_hhmmss") & "_excel"
    create_excel_folder = dest_folder_path
End Function

' 15. 出力先フォルダを作成(PDF)
Private Function create_pdf_folder() As String

    MkDir ThisWorkbook.Path & "\" & Format(Now, "yyyymmdd_hhmmss") & "_pdf"
    Dim dest_pdf_folder_path As String
    dest_pdf_folder_path = ThisWorkbook.Path & "\" & Format(Now, "yyyymmdd_hhmmss") & "_pdf"
    create_pdf_folder = dest_pdf_folder_path
    
End Function

' 16 データ転記処理
Private Sub transcribe_data_process(template_path As String, file_name As String, dest_excel_folder_path As String, dest_pdf_folder_path As String, source_sheet As Worksheet, source_start_row As Long, source_end_row As Long, source_column_heading As Long)
    
    Dim staff_name As String
    Dim staff_code As String
    Dim pay_day As Date
    Dim payslip_title As String
    Dim dest_file_name As String
    Dim dest_sheet As Worksheet
    Dim pdf_file_name As String
    Dim ary_data As Variant
    Dim ary_name As Variant
    Dim i As Long
    Dim j As Long
    
    pay_day = source_sheet.Cells(source_end_row, 3)
    payslip_title = source_sheet.Cells(6, 1)
    
    For j = 3 To source_sheet.Cells(source_start_row - 1, source_sheet.Columns.Count).End(xlToLeft).Column - 1
        ' 社員名
        staff_name = source_sheet.Cells(source_start_row - 1, j)
        
        ' 所属コード
        staff_code = source_sheet.Cells(source_start_row - 2, j)
        
        ' 17. 出力先のファイル作成
        dest_file_name = create_dest_files(template_path, file_name, dest_excel_folder_path, staff_name)
        
        ' 出力先シート
        Set dest_sheet = Workbooks(dest_file_name).Worksheets("Sheet1")
        
        ' 19. 社員名と所属コードの転記
        Call Module1.describe_staff_info(dest_sheet, staff_name, staff_code, pay_day, payslip_title)
        
        
        ary_data = Array()
        ary_name = Array()
        
        Dim payment_counter As Long
        Dim deduction_counter As Long
        payment_counter = 8
        deduction_counter = 8
        
        For i = 0 To source_end_row - source_start_row
            ReDim Preserve ary_data(UBound(ary_data) + 1)
            ary_data(i) = source_sheet.Cells(i + source_start_row, j)
            ReDim Preserve ary_name(UBound(ary_name) + 1)
            ary_name(i) = source_sheet.Cells(i + source_start_row, source_column_heading)
            If IsNumeric(ary_data(i)) = True And ary_data(i) <> 0 Then
                ' 20. 転記
                Call Module1.search_describe_cell(dest_file_name, ary_data(i), ary_name(i), payment_counter, deduction_counter)
            End If
        Next i
        
        ' 21. 不要なシートの削除
        Call Module1.all_sheet_delete(dest_file_name)
        
        pdf_file_name = dest_pdf_folder_path & "\" & staff_name & "_" & Year(Now) & file_name & ".pdf"
        dest_sheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:=pdf_file_name, OpenAfterPublish:=False
        
        Workbooks(dest_file_name).Close SaveChanges:=True
        
    Next j
    
End Sub

' 17. 出力先のファイル作成
Private Function create_dest_files(template_path As String, file_name As String, dest_excel_folder_path As String, staff_name) As String
    
    Dim template_file As String
    Dim staff_file As String
    staff_file = dest_excel_folder_path & "\" & staff_name & "_" & file_name & ".xlsx"
    FileCopy template_path, staff_file
    Workbooks.Open Filename:=staff_file
    
    ' 18. シートの表示
    Call Module1.sheet_visible
    
    create_dest_files = Application.ActiveWorkbook.Name

End Function

' 18. シートの表示
Private Sub sheet_visible()

    Dim s As Object
    For Each s In ActiveWorkbook.Worksheets
        s.Visible = True
    Next s
    
End Sub

' 19. 社員名と所属コードの転記
Private Sub describe_staff_info(dest_sheet As Worksheet, staff_name As String, staff_code As String, pay_day As Date, payslip_title As String)
    Dim i As Long
    Dim j As Long
    
    For j = 1 To 20
        For i = 1 To 30
            Select Case dest_sheet.Cells(i, j)
                Case Is = "氏　名"
                    dest_sheet.Cells(i, j + 1) = staff_name & "　様"
                Case Is = "所属コード"
                    dest_sheet.Cells(i, j + 1) = staff_code
                Case Is = "支給日　令和〇年〇月〇日"
                    dest_sheet.Cells(i, j) = "支給日　" & Format(pay_day, "ggge年mm月dd日")
                Case Is = "〇〇明細書"
                    dest_sheet.Cells(i, j) = payslip_title & "　明細書"
            End Select
        Next i
    Next j
    
End Sub

' 20. 転記
Private Sub search_describe_cell(dest_file_name As String, ary_data As Variant, ary_name As Variant, payment_counter As Long, deduction_counter As Long)
    ' 出力先シートの指定
    Dim dest_sheet As Worksheet
    Dim search_sheet As Worksheet
    Set dest_sheet = Workbooks(dest_file_name).Worksheets("Sheet1")
    Set search_sheet = Workbooks(dest_file_name).Worksheets("Sheet2")
    
    Dim i As Long
    Dim j As Long
    
    For j = 1 To 20
        For i = 1 To 30
            If search_sheet.Cells(i, j) = ary_name Then
                If j = 5 And ary_name <> "支給合計" Then
                    dest_sheet.Cells(payment_counter, j) = ary_name
                    dest_sheet.Cells(payment_counter, j + 1) = ary_data
                    payment_counter = payment_counter + 1
                ElseIf j = 8 And ary_name <> "控除合計" Then
                    dest_sheet.Cells(deduction_counter, j) = ary_name
                    dest_sheet.Cells(deduction_counter, j + 1) = ary_data
                    deduction_counter = deduction_counter + 1
                Else
                    dest_sheet.Cells(i, j) = ary_name
                    dest_sheet.Cells(i, j + 1) = ary_data
                End If
            End If
        Next i
    Next j
End Sub

' 21. 不要なシートの削除
Private Sub all_sheet_delete(file_name As String)
    
    Application.DisplayAlerts = False
    
    Do While Workbooks(file_name).Worksheets.Count > 1
        Workbooks(file_name).Worksheets(Worksheets.Count).Delete
    Loop
    
    Application.DisplayAlerts = True
    
End Sub
