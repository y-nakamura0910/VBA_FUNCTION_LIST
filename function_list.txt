Option Explicit

Public Sub function_exe()

    ' パスワードの指定
    Dim password As String
    password = 1234
    
    ' 2. ブックの保護解除
    Call Module1.workbook_unprotect(password)
    
    ' 4. シートの保護解除
    Call Module1.worksheet_unprotect(password)
    
    ' 5. ファイルを開いて、ファイル名を取得
    Dim source_file_name As String
    source_file_name = Module1.file_open(password)
    
    ' 6. シート名を指定
    Dim source_sheet_name As String
    source_sheet_name = Module1.get_sheet_name(source_file_name, password)
    
    ' 8. データソースシート
    Dim source_sheet As Worksheet
    Set source_sheet = Workbooks(source_file_name).Worksheets(source_sheet_name)
    
    ' 9. データソース開始行の指定
    Dim source_start_row As Long
    source_start_row = 9
    
    ' 10. データソース終了行の指定
    Dim source_column As String
    Dim source_end_row As Long
    source_column = "B"
    source_end_row = get_end_row(source_column, source_sheet)
    
    ' 11. 出力先のファイル作成
    Dim dest_file_name As String
    dest_file_name = create_dest_file(source_file_name, password)

    ' 12. 出力先のシートの指定
    Dim dest_sheet As Worksheet
    Set dest_sheet = Workbooks(dest_file_name).Worksheets("Sheet1")
    
    ' 13. タイトルの転記
    Call Module1.transcribe_title(source_sheet, dest_sheet, source_start_row)
    
    ' 14. データ転記開始行
    Dim dest_row_count As Long
    dest_row_count = source_start_row
    
    ' 15. データ転記
    Call Module1.transcribe_data(source_sheet, dest_sheet, source_start_row, source_end_row, dest_row_count)
    
    ' 3. シートの保護
    Call Module1.worksheet_protect(password)
    
    ' 1. ブックの保護
    Call Module1.workbook_protect(password)
    
End Sub

' 1. ブックの保護
Private Sub workbook_protect(password As String)
    ThisWorkbook.Protect (password)
End Sub

' 2. ブックの保護解除
Private Sub workbook_unprotect(password As String)
    ThisWorkbook.Unprotect (password)
End Sub

' 3. シートの保護
Private Sub worksheet_protect(password As String)
    ThisWorkbook.Worksheets(1).Protect (password)
End Sub

' 4. シートの解除
Private Sub worksheet_unprotect(password As String)
    ThisWorkbook.Worksheets(1).Unprotect (password)
End Sub

' 5. ファイルを開いて、ファイル名を取得
Private Function file_open(password As String) As String
    
    ' カレントディレクトリの設定
    CreateObject("WScript.Shell").currentdirectory = ThisWorkbook.Path
    
    ' ファイル名を取得
    Dim file_path As Variant
    file_path = Application.GetOpenFilename()
    
    If file_path = False Then
        Call Module1.worksheet_protect(password)
        Call Module1.workbook_protect(password)
        End
    Else
        Workbooks.Open Filename:=file_path
        file_open = Application.ActiveWorkbook.Name
    End If
    
End Function

' 6. シート名を指定
Private Function get_sheet_name(source_file_name As String, password As String) As String
    
    ' シート名を入力
    Dim sheet_name As Variant
    sheet_name = Application.InputBox(prompt:="シート名", Type:=2)
    
    ' 7. 入力したシート名が存在するか判定
    Dim exist_worksheet As Boolean
    exist_worksheet = judge_exist_worksheet(sheet_name)
    
    If sheet_name = False Then
        Workbooks(source_file_name).Close
        Call Module1.worksheet_protect(password)
        Call Module1.workbook_protect(password)
        End
    ElseIf exist_worksheet = False Then
        MsgBox "入力された名前のシート名が存在しません"
        Call Module1.worksheet_protect(password)
        Call Module1.workbook_protect(password)
        get_sheet_name = get_sheet_name(source_file_name, password)
    Else
        get_sheet_name = sheet_name
        Exit Function
    End If
    
End Function

Private Function judge_exist_worksheet(sheet_name As Variant)

    Dim ws As Worksheet
    
    For Each ws In ActiveWorkbook.Sheets
        If ws.Name = sheet_name Then
            judge_exist_worksheet = True
            Exit Function
        End If
    Next
    
    judge_exist_worksheet = False

End Function

' 10. データソース終了行の指定
Private Function get_end_row(source_column As String, source_sheet As Worksheet) As Long
    source_sheet.Activate
    get_end_row = Cells(Rows.Count, source_column).End(xlUp).Row
End Function

' 11. 出力先のファイル作成
Private Function create_dest_file(source_file_name As String, password As String) As String
    
    Dim dest_file_name As Variant
    Dim dest_file_path As Variant
    Dim dest_file As Workbook
    dest_file_name = Application.InputBox(prompt:="出力ファイル名", Type:=2)
    
    If dest_file_name = False Then
        Workbooks(source_file_name).Close
        Call Module1.worksheet_protect(password)
        Call Module1.workbook_protect(password)
        End
    Else
        dest_file_path = ThisWorkbook.Path & "\" & dest_file_name & ".xlsx"
    End If
    
    If Dir(dest_file_path) = "" Then
        Set dest_file = Workbooks.Add
        dest_file.SaveAs dest_file_path
        create_dest_file = Application.ActiveWorkbook.Name
    Else
        MsgBox "既に" & dest_file_name & "というファイルは存在します"
        create_dest_file = create_dest_file(source_file_name, password)
    End If
        
End Function

' 13. タイトルの転記
Private Sub transcribe_title(source_sheet As Worksheet, dest_sheet As Worksheet, source_start_row As Long)

    Dim i As Long
    
    For i = 1 To source_start_row - 1
        dest_sheet.Range(dest_sheet.Cells(i, 1), dest_sheet.Cells(i, source_sheet.Cells(i, source_sheet.Columns.Count).End(xlToLeft).Column)) = _
        source_sheet.Range(source_sheet.Cells(i, 1), source_sheet.Cells(i, source_sheet.Cells(i, source_sheet.Columns.Count).End(xlToLeft).Column)).Value
    Next i
    
End Sub

' 15. データ転記
Private Sub transcribe_data(source_sheet As Worksheet, dest_sheet As Worksheet, source_start_row As Long, source_end_row As Long, dest_row_count As Long)
    
    Dim ary_data As Variant
    Dim ary_title As Variant
    Dim i As Long
    Dim j As Long
    
    For j = 3 To source_sheet.Cells(source_start_row - 1, source_sheet.Columns.Count).End(xlToLeft).Column
        ary_data = Array()
        ary_title = Array()
        
        For i = 0 To source_end_row - source_start_row
            ReDim Preserve ary_data(UBound(ary_data) + 1)
            ary_data(i) = source_sheet.Cells(i + source_start_row, j)
            ReDim Preserve ary_title(UBound(ary_title) + 1)
            ary_title(i) = source_sheet.Cells(i + source_start_row, j - 1)
            If IsNumeric(ary_data(i)) = True And ary_data(i) <> 0 Then
                dest_sheet.Cells(dest_row_count, j) = ary_data(i)
                dest_sheet.Cells(dest_row_count, j - 1) = ary_title(i)
            End If
        Next i
    Next j
        
End Sub
